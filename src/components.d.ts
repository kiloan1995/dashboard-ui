/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Job } from "../functions/src/models/Job";
export { Job } from "../functions/src/models/Job";
export namespace Components {
    interface AppRoot {
    }
    interface ChartHistogram {
        "xAxisLabel": string;
        "yAxisLabel": string;
    }
    interface ChartIndex {
        "textTotal": string;
    }
    interface ChartPage {
    }
    interface ChartPie {
        "textTotal": string;
    }
    interface FilterPicker {
    }
    interface JobList {
        "columnNames": string[];
        "jobs": Job[];
    }
    interface PageDashboard {
    }
    interface PageFooter {
    }
    interface PageHeader {
        "title": string;
    }
    interface PreviewTile {
        "bIsAverage": boolean;
        "small": string;
        "title": string;
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLChartHistogramElement extends Components.ChartHistogram, HTMLStencilElement {
    }
    var HTMLChartHistogramElement: {
        prototype: HTMLChartHistogramElement;
        new (): HTMLChartHistogramElement;
    };
    interface HTMLChartIndexElement extends Components.ChartIndex, HTMLStencilElement {
    }
    var HTMLChartIndexElement: {
        prototype: HTMLChartIndexElement;
        new (): HTMLChartIndexElement;
    };
    interface HTMLChartPageElement extends Components.ChartPage, HTMLStencilElement {
    }
    var HTMLChartPageElement: {
        prototype: HTMLChartPageElement;
        new (): HTMLChartPageElement;
    };
    interface HTMLChartPieElement extends Components.ChartPie, HTMLStencilElement {
    }
    var HTMLChartPieElement: {
        prototype: HTMLChartPieElement;
        new (): HTMLChartPieElement;
    };
    interface HTMLFilterPickerElement extends Components.FilterPicker, HTMLStencilElement {
    }
    var HTMLFilterPickerElement: {
        prototype: HTMLFilterPickerElement;
        new (): HTMLFilterPickerElement;
    };
    interface HTMLJobListElement extends Components.JobList, HTMLStencilElement {
    }
    var HTMLJobListElement: {
        prototype: HTMLJobListElement;
        new (): HTMLJobListElement;
    };
    interface HTMLPageDashboardElement extends Components.PageDashboard, HTMLStencilElement {
    }
    var HTMLPageDashboardElement: {
        prototype: HTMLPageDashboardElement;
        new (): HTMLPageDashboardElement;
    };
    interface HTMLPageFooterElement extends Components.PageFooter, HTMLStencilElement {
    }
    var HTMLPageFooterElement: {
        prototype: HTMLPageFooterElement;
        new (): HTMLPageFooterElement;
    };
    interface HTMLPageHeaderElement extends Components.PageHeader, HTMLStencilElement {
    }
    var HTMLPageHeaderElement: {
        prototype: HTMLPageHeaderElement;
        new (): HTMLPageHeaderElement;
    };
    interface HTMLPreviewTileElement extends Components.PreviewTile, HTMLStencilElement {
    }
    var HTMLPreviewTileElement: {
        prototype: HTMLPreviewTileElement;
        new (): HTMLPreviewTileElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "chart-histogram": HTMLChartHistogramElement;
        "chart-index": HTMLChartIndexElement;
        "chart-page": HTMLChartPageElement;
        "chart-pie": HTMLChartPieElement;
        "filter-picker": HTMLFilterPickerElement;
        "job-list": HTMLJobListElement;
        "page-dashboard": HTMLPageDashboardElement;
        "page-footer": HTMLPageFooterElement;
        "page-header": HTMLPageHeaderElement;
        "preview-tile": HTMLPreviewTileElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface ChartHistogram {
        "xAxisLabel"?: string;
        "yAxisLabel"?: string;
    }
    interface ChartIndex {
        "textTotal"?: string;
    }
    interface ChartPage {
    }
    interface ChartPie {
        "textTotal"?: string;
    }
    interface FilterPicker {
    }
    interface JobList {
        "columnNames"?: string[];
        "jobs"?: Job[];
    }
    interface PageDashboard {
    }
    interface PageFooter {
    }
    interface PageHeader {
        "title"?: string;
    }
    interface PreviewTile {
        "bIsAverage"?: boolean;
        "small"?: string;
        "title"?: string;
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "chart-histogram": ChartHistogram;
        "chart-index": ChartIndex;
        "chart-page": ChartPage;
        "chart-pie": ChartPie;
        "filter-picker": FilterPicker;
        "job-list": JobList;
        "page-dashboard": PageDashboard;
        "page-footer": PageFooter;
        "page-header": PageHeader;
        "preview-tile": PreviewTile;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "chart-histogram": LocalJSX.ChartHistogram & JSXBase.HTMLAttributes<HTMLChartHistogramElement>;
            "chart-index": LocalJSX.ChartIndex & JSXBase.HTMLAttributes<HTMLChartIndexElement>;
            "chart-page": LocalJSX.ChartPage & JSXBase.HTMLAttributes<HTMLChartPageElement>;
            "chart-pie": LocalJSX.ChartPie & JSXBase.HTMLAttributes<HTMLChartPieElement>;
            "filter-picker": LocalJSX.FilterPicker & JSXBase.HTMLAttributes<HTMLFilterPickerElement>;
            "job-list": LocalJSX.JobList & JSXBase.HTMLAttributes<HTMLJobListElement>;
            "page-dashboard": LocalJSX.PageDashboard & JSXBase.HTMLAttributes<HTMLPageDashboardElement>;
            "page-footer": LocalJSX.PageFooter & JSXBase.HTMLAttributes<HTMLPageFooterElement>;
            "page-header": LocalJSX.PageHeader & JSXBase.HTMLAttributes<HTMLPageHeaderElement>;
            "preview-tile": LocalJSX.PreviewTile & JSXBase.HTMLAttributes<HTMLPreviewTileElement>;
        }
    }
}
